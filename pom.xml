<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ar.com.kfgodel</groupId>
    <artifactId>java-pom</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <groupId>ar.com.kfgodel</groupId>
  <artifactId>executable-java</artifactId>
  <version>0.1</version>

  <name>ExecutableJava</name>
  <description>Example project that uses a binary container to be executable on different platforms</description>
  <url>https://github.com/kfgodel/executable-java</url>

  <scm>
    <developerConnection>scm:git:ssh://github.com/kfgodel/executable-java.git</developerConnection>
    <connection>${project.scm.developerConnection}</connection>
    <url>${project.url}</url>
  </scm>

  <repositories>
    <repository>
      <id>kfgodel_mosquito</id>
      <name>Repo Mosquito</name>
      <url>http://kfgodel.info:8081/nexus/repository/public/</url>
    </repository>
  </repositories>

  <properties>
    <!-- Sonar properties to prevent unintentional id changes (Reference: https://docs.sonarqube.org/latest/analysis/analysis-parameters/) -->
    <sonar.projectKey>ar.com.kfgodel:executable-java</sonar.projectKey>

    <version.plugin.assembly>2.5.3</version.plugin.assembly>
    <version.plugin.shade>2.3</version.plugin.shade>
    <version.plugin.dependency>2.10</version.plugin.dependency>
  </properties>

  <build>
    <plugins>
	
        <!-- Descomprime el contenedor ejecutable -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${version.plugin.dependency}</version>
            <executions>
                <execution>
                    <id>copy-dependency</id>
                    <phase>compile</phase>
                    <goals>
                        <goal>unpack</goal>
                    </goals>
                    <configuration>
                        <artifactItems>
                            <artifactItem>
                                <groupId>ar.com.kfgodel</groupId>
                                <artifactId>executable-container</artifactId>
                              <version>0.2-SNAPSHOT</version>
                                <type>zip</type>
                                <overWrite>true</overWrite>
                                <outputDirectory>target/unpacked</outputDirectory>
                            </artifactItem>
                        </artifactItems>
                    </configuration>
                </execution>
            </executions>
        </plugin>

      <!-- Genera un sÃ³lo jar con todas las dependencias -->
        <plugin>
            <!-- Permite que los archivos individuales de spring sean mergeados y no pisados -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${version.plugin.shade}</version>
            <configuration>
                <filters>
                    <filter>
                        <artifact>*:*</artifact>
                        <excludes>
                            <exclude>META-INF/*.SF</exclude>
                            <exclude>META-INF/*.DSA</exclude>
                            <exclude>META-INF/*.RSA</exclude>
                        </excludes>
                    </filter>
                </filters>
            </configuration>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>shade</goal>
                    </goals>
                    <configuration>
                        <transformers>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.handlers</resource>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.schemas</resource>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.tooling</resource>
                            </transformer>
                        </transformers>
                    </configuration>
                </execution>
            </executions>
        </plugin>

      <!-- Empaqueta el resultado final en un zip -->
        <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${version.plugin.assembly}</version>
            <executions>
                <execution>
                    <id>generate-assembly</id>
                    <phase>package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <descriptors>
                    <descriptor>src/assembly/descriptor.xml</descriptor>
                </descriptors>
                <finalName>${project.artifactId}</finalName>
                <appendAssemblyId>false</appendAssemblyId>
                <outputDirectory>target</outputDirectory>
            </configuration>
        </plugin>

    </plugins>
  </build>
  
  <dependencies>

    <!-- Communication classes to manage executable host container -->
    <dependency>
        <groupId>org.tanukisoftware</groupId>
        <artifactId>wrapper</artifactId>
        <version>3.5.25</version>
        <scope>provided</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${version.logback}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.logback}</version>
      <scope>compile</scope>
    </dependency>
    
  </dependencies>

</project>
